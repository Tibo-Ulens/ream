(let fib
	(lambda n
		(if (<= n 2)
			1
			(+
				(fib (- n 1))
				(fib (- n 2))))))

(print (fib 10))

(let append
	(lambda (list1 list2)
        (if (nil? list1)
			list2
            (cons (car list1) (append (cdr list1) list2)))))

(let rev
	(lambda l
		(if (nil? l)
			`()
			(append (rev (cdr l)) (car l)))))

(let list (cons 3 (cons 2 (cons 1 `()))))
(let revlist (rev list))
(print list)
(print revlist)
